プロダクト演習課題

■テーマ
pix2pixを使用した手描き文字の補完＋高解像度化

画像の半分を入力として、元の全体の画像を出力させる
画素数を上げた画像を出力する


■Conditional GANを用いる
生成者⇨変換前画像xに条件付けされた潜在変数zから変換後画像yを生成、条件付けすることによって出す画像をコントロールする
識別者⇨生成した画像と条件付けに使用した画像を入れて、正誤を判断する

■損失関数
条件付けに使用したものが入ってるだけで一緒　純粋なGANのLOSS
プラス
正解データと生成画像が近づくように二つの画像の距離をとったLOSS

■Generaterのネットワークアーキテクチャ
スキップコネクション（U-Net）　最初の層から最後の層に向かってのコネクションをつける　そのことで次元削減時に消えてしまうような低次元の特徴を持っていける

■Descriminatorのネットワークアーキテクチャ
PatchGANといいう手法。N＊Nのパッチを考えて、それだけ見て正解かどうかを判定する、これをずらして繰り返す。局所特徴量を捉えるので、生成者のぼやけを減らせる。


■方針
①DCGANの実装(画像への拡張)
②Conditional GANの実装、条件付け
③PatchGANの実装
④精度を向上させるための工夫





①DCGAN
モデル構成
・generator
input 100次元のノイズ
↓
7*7*256
↓
14*14*128
↓
28*28*64
↓
28*28*1

・discriminator
input 28*28*1
↓
14*14*128
↓
7*7*256
↓
256
↓
1
